name: debian arm64

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      # Define an output named 'result'
      result: ${{ steps.build.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/dxx-rebirth-compat:latest
          
      - name: Save Docker image
        id: save-image
        run: |
          docker save -o dxx-rebirth-compat.tar.gz ${{ secrets.DOCKER_USERNAME }}/dxx-rebirth-compat:latest
        continue-on-error: true

      - name: Upload Docker image
        uses: actions/upload-artifact@v2
        with:
          name: dxx-rebirth-compat
          path: dxx-rebirth-compat.tar.gz


  release:
    needs: docker
    runs-on: ubuntu-latest
    if: ${{ needs.docker.outputs.result == 'success' }}
    steps:
      - name: Download and extract Docker image
        uses: actions/download-artifact@v2
        with:
          name: dxx-rebirth-compat
          path: /tmp

      - name: Extract contents
        run: |
          tar -xzvf /tmp/dxx-rebirth-compat.tar.gz -C /tmp
        continue-on-error: true

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          release_name: Continuous Build
          body: |
            # Release notes go here. You can include information about changes, improvements, or any other relevant details.

      - name: Upload Artifact to Release
        uses: actions/upload-artifact@v2
        with:
          name: release-artifact
          path: project_root/build
        continue-on-error: true

      - name: Attach Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: project_root/build 
          asset_name: dxx-rebirth-compat.tar.gz
          asset_content_type: application/gzip

